Index: src/GUI/EventController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package GUI;\r\n\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.scene.layout.VBox;\r\nimport model.*;\r\nimport model.lists.EventList;\r\nimport model.lists.StudentList;\r\nimport org.controlsfx.control.CheckComboBox;\r\n\r\nimport java.time.LocalDate;\r\nimport java.util.ArrayList;\r\n\r\n//Kateryna//\r\npublic class EventController\r\n{\r\n    // todo delete all modelManager fields in astah!!\r\n    @FXML\r\n    private TableView<Event> eventsTable;\r\n    @FXML\r\n    private TextField titleField;\r\n    @FXML\r\n    private TextArea descriptionArea;\r\n    @FXML\r\n    private DatePicker datePicker;\r\n    @FXML\r\n    private VBox actionsForSelectedEventBox;\r\n    @FXML\r\n    private CheckComboBox<Student> attenders;//todo change in class diagram \"participants\"\r\n    @FXML\r\n    private Button editEventButton;\r\n    @FXML\r\n    private Button deleteEventButton;\r\n    @FXML\r\n    private Button addEventButton;\r\n    @FXML\r\n    private Button exportEventButton;\r\n    @FXML\r\n    private TableColumn<Event, String> titleColumn;\r\n    @FXML\r\n    private TableColumn<Event, String> descriptionColumn;\r\n    @FXML\r\n    private TableColumn<Event, String> dateColumn;\r\n    @FXML\r\n    private TableColumn<Event, String> attendersColumn;\r\n\r\n    public void initialize()\r\n    {\r\n        titleColumn.setCellValueFactory(\r\n                new PropertyValueFactory<>(\"title\"));\r\n        descriptionColumn.setCellValueFactory(\r\n                new PropertyValueFactory<Event, String>(\"description\"));\r\n        dateColumn.setCellValueFactory(\r\n                new PropertyValueFactory<Event, String>(\"date\"));\r\n        attendersColumn.setCellValueFactory(\r\n                new PropertyValueFactory<Event, String>(\"attenders\"));\r\n\r\n        updateTable();\r\n    }\r\n\r\n    public void handleAction(ActionEvent e)\r\n    {\r\n        if (e.getSource() == addEventButton)\r\n        {\r\n            String title = titleField.getText();\r\n            String description = descriptionColumn.getText();\r\n\r\n            MyDate date = new MyDate();\r\n            LocalDate tempDate = datePicker.getValue();\r\n            date.setDay(tempDate.getDayOfMonth());\r\n            date.setMonth(tempDate.getMonthValue());\r\n            date.setYear(tempDate.getYear()); // date initialization\r\n\r\n\r\n\r\n            Event event = new Event(title, description, date);\r\n\r\n            try\r\n            {\r\n                for (Student attender : attenders.getItems())\r\n                {\r\n                    event.addAttender(attender);\r\n                }\r\n            }\r\n            catch (ArrayIndexOutOfBoundsException exception)\r\n            {\r\n                System.err.println(\"Student list is empty in event tab\");\r\n            }\r\n\r\n            Association association = AssociationModelManager.getAssociation();\r\n            association.addEvent(event);\r\n            AssociationModelManager.saveAssociation(association);\r\n            updateTable();\r\n        }\r\n        else if (e.getSource() == exportEventButton)\r\n        {\r\n\r\n\r\n        }\r\n        else if (e.getSource() == editEventButton)\r\n        {\r\n            String title = titleField.getText();\r\n            String description = descriptionColumn.getText();\r\n\r\n            MyDate date = new MyDate();\r\n            LocalDate tempDate = datePicker.getValue();\r\n            date.setDay(tempDate.getDayOfMonth());\r\n            date.setMonth(tempDate.getMonthValue());\r\n            date.setYear(tempDate.getYear()); // date initialization\r\n\r\n\r\n            Association association = AssociationModelManager.getAssociation();\r\n            association.getEventList().setEvent(new Event(title, description, date), eventsTable.getSelectionModel().getSelectedIndex());\r\n            AssociationModelManager.saveAssociation(association);\r\n            updateTable();\r\n        }\r\n        else if (e.getSource() == deleteEventButton)\r\n        {\r\n            Association association = AssociationModelManager.getAssociation();\r\n            int temp = eventsTable.getSelectionModel().getSelectedIndex();\r\n            association.removeEvent(temp);\r\n            AssociationModelManager.saveAssociation(association);\r\n            updateTable();\r\n        }\r\n        else if (e.getSource() == eventsTable)\r\n        {\r\n            titleField.setText(titleColumn.getText());\r\n            descriptionArea.setText(descriptionColumn.getText());\r\n            String tempDate = dateColumn.getText();\r\n            MyDate eDate = new MyDate();\r\n            //eDate.setDay(dateColumn.getText());\r\n            //datePicker.setValue();\r\n\r\n        }\r\n    }/**/\r\n\r\n    public void updateTable()\r\n    {\r\n        EventList eventList = AssociationModelManager.getAssociation()\r\n                .getEventList();\r\n        eventsTable.getItems().clear();\r\n\r\n        for (int i = 0; i < eventList.getSize(); i++)\r\n        {\r\n            Event event = eventList.getEvent(i);\r\n            eventsTable.getItems().add(event);\r\n        }\r\n\r\n        ObservableList<Student> items = FXCollections.observableArrayList();\r\n        StudentList studentList = AssociationModelManager.getAssociation().getStudentList();\r\n        items.addAll(studentList.getArrayOfStudents());\r\n\r\n        attenders = new CheckComboBox<>(items);\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/GUI/EventController.java b/src/GUI/EventController.java
--- a/src/GUI/EventController.java	
+++ b/src/GUI/EventController.java	
@@ -154,7 +154,7 @@
         StudentList studentList = AssociationModelManager.getAssociation().getStudentList();
         items.addAll(studentList.getArrayOfStudents());
 
-        attenders = new CheckComboBox<>(items);
+        attenders.getItems().addAll(items);
     }
 
 }
