Index: src/GUI/EventController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package GUI;\r\n\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.scene.layout.VBox;\r\nimport model.*;\r\nimport model.lists.EventList;\r\nimport model.lists.StudentList;\r\nimport org.controlsfx.control.CheckComboBox;\r\n\r\nimport java.time.LocalDate;\r\nimport java.util.ArrayList;\r\n\r\n//Kateryna//\r\npublic class EventController\r\n{\r\n    // todo delete all modelManager fields in astah!!\r\n    @FXML\r\n    private TableView<Event> eventsTable;\r\n    @FXML\r\n    private TextField titleField;\r\n    @FXML\r\n    private TextArea descriptionArea;\r\n    @FXML\r\n    private DatePicker datePicker;\r\n    @FXML\r\n    private VBox actionsForSelectedEventBox;\r\n    @FXML\r\n    private CheckComboBox<Student> attenders;//todo change in class diagram \"participants\"\r\n    @FXML\r\n    private Button editEventButton;\r\n    @FXML\r\n    private Button deleteEventButton;\r\n    @FXML\r\n    private Button addEventButton;\r\n    @FXML\r\n    private Button exportEventButton;\r\n    @FXML\r\n    private TableColumn<Event, String> titleColumn;\r\n    @FXML\r\n    private TableColumn<Event, String> descriptionColumn;\r\n    @FXML\r\n    private TableColumn<Event, String> dateColumn;\r\n    @FXML\r\n    private TableColumn<Event, String> attendersColumn;\r\n\r\n    public void initialize()\r\n    {\r\n        titleColumn.setCellValueFactory(\r\n                new PropertyValueFactory<>(\"title\"));\r\n        descriptionColumn.setCellValueFactory(\r\n                new PropertyValueFactory<Event, String>(\"description\"));\r\n        dateColumn.setCellValueFactory(\r\n                new PropertyValueFactory<Event, String>(\"date\"));\r\n        attendersColumn.setCellValueFactory(\r\n                new PropertyValueFactory<Event, String>(\"attenders\"));\r\n\r\n        updateTable();\r\n    }\r\n\r\n    public void handleAction(ActionEvent e)\r\n    {\r\n        if (e.getSource() == addEventButton)\r\n        {\r\n            String title = titleField.getText();\r\n            String description = descriptionColumn.getText();\r\n\r\n            MyDate date = new MyDate();\r\n            LocalDate tempDate = datePicker.getValue();\r\n            date.setDay(tempDate.getDayOfMonth());\r\n            date.setMonth(tempDate.getMonthValue());\r\n            date.setYear(tempDate.getYear()); // date initialization\r\n\r\n\r\n\r\n            Event event = new Event(title, description, date);\r\n\r\n            try\r\n            {\r\n                for (Student attender : attenders.getItems())\r\n                {\r\n                    event.addAttender(attender);\r\n                }\r\n            }\r\n            catch (ArrayIndexOutOfBoundsException exception)\r\n            {\r\n                System.err.println(\"Student list is empty in event tab\");\r\n            }\r\n\r\n            Association association = AssociationModelManager.getAssociation();\r\n            association.addEvent(event);\r\n            AssociationModelManager.saveAssociation(association);\r\n            updateTable();\r\n        }\r\n        else if (e.getSource() == exportEventButton)\r\n        {\r\n\r\n\r\n        }\r\n        else if (e.getSource() == editEventButton)\r\n        {\r\n            String title = titleField.getText();\r\n            String description = descriptionColumn.getText();\r\n\r\n            MyDate date = new MyDate();\r\n            LocalDate tempDate = datePicker.getValue();\r\n            date.setDay(tempDate.getDayOfMonth());\r\n            date.setMonth(tempDate.getMonthValue());\r\n            date.setYear(tempDate.getYear()); // date initialization\r\n\r\n\r\n            Association association = AssociationModelManager.getAssociation();\r\n            association.getEventList().setEvent(new Event(title, description, date), eventsTable.getSelectionModel().getSelectedIndex());\r\n            AssociationModelManager.saveAssociation(association);\r\n            updateTable();\r\n        }\r\n        else if (e.getSource() == deleteEventButton)\r\n        {\r\n            Association association = AssociationModelManager.getAssociation();\r\n            int temp = eventsTable.getSelectionModel().getSelectedIndex();\r\n            association.removeEvent(temp);\r\n            AssociationModelManager.saveAssociation(association);\r\n            updateTable();\r\n        }\r\n        else if (e.getSource() == eventsTable)\r\n        {\r\n            titleField.setText(titleColumn.getText());\r\n            descriptionArea.setText(descriptionColumn.getText());\r\n            String tempDate = dateColumn.getText();\r\n            MyDate eDate = new MyDate();\r\n            //eDate.setDay(dateColumn.getText());\r\n            //datePicker.setValue();\r\n\r\n        }\r\n    }/**/\r\n\r\n    public void updateTable()\r\n    {\r\n        EventList eventList = AssociationModelManager.getAssociation()\r\n                .getEventList();\r\n        eventsTable.getItems().clear();\r\n\r\n        for (int i = 0; i < eventList.getSize(); i++)\r\n        {\r\n            Event event = eventList.getEvent(i);\r\n            eventsTable.getItems().add(event);\r\n        }\r\n\r\n        ObservableList<Student> items = FXCollections.observableArrayList();\r\n        StudentList studentList = AssociationModelManager.getAssociation().getStudentList();\r\n        items.addAll(studentList.getArrayOfStudents());\r\n\r\n        attenders = new CheckComboBox<>(items);\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/GUI/EventController.java b/src/GUI/EventController.java
--- a/src/GUI/EventController.java	(revision 1bf7d4c4ef452dcb851a7c7611416ad9b01bf1f2)
+++ b/src/GUI/EventController.java	(date 1669888974043)
@@ -132,6 +132,7 @@
             descriptionArea.setText(descriptionColumn.getText());
             String tempDate = dateColumn.getText();
             MyDate eDate = new MyDate();
+            String hola = dateColumn.getText().split(".");
             //eDate.setDay(dateColumn.getText());
             //datePicker.setValue();
 
Index: src/model/Association.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model;\r\n\r\nimport model.lists.*;\r\n\r\nimport java.io.Serializable;\r\n\r\n//together\r\npublic class Association implements Serializable\r\n{\r\n  private GenreList genreList;\r\n  private StudentList studentList;\r\n  private Catalogue catalogue;\r\n  private EventList eventList;\r\n  private VotingList votingList;\r\n\r\n  public Association()\r\n  {\r\n    this.studentList = new StudentList();\r\n    this.genreList = new GenreList();\r\n    this.catalogue = new Catalogue();\r\n    this.eventList = new EventList();\r\n    this.votingList = new VotingList();\r\n  }\r\n\r\n  public Catalogue getCatalogue()\r\n  {\r\n    return catalogue;\r\n  }\r\n\r\n  public EventList getEventList()\r\n  {\r\n    return eventList;\r\n  }\r\n\r\n  public GenreList getGenreList()\r\n  {\r\n    return genreList;\r\n  }\r\n\r\n  public StudentList getStudentList()\r\n  {\r\n    return studentList;\r\n  }\r\n\r\n  public VotingList getVotingList()\r\n  {\r\n    return votingList;\r\n  }\r\n\r\n  public void setCatalogue(Catalogue catalogue)\r\n  {\r\n    this.catalogue = catalogue;\r\n  }\r\n\r\n  public void setEventList(EventList eventList)\r\n  {\r\n    this.eventList = eventList;\r\n  }\r\n\r\n  public void setGenreList(GenreList genreList)\r\n  {\r\n    this.genreList = genreList;\r\n  }\r\n\r\n  public void setStudentList(StudentList studentList)\r\n  {\r\n    this.studentList = studentList;\r\n  }\r\n\r\n  public void setVotingList(VotingList votingList)\r\n  {\r\n    this.votingList = votingList;\r\n  }\r\n\r\n  public Genre getGenre(int index)\r\n  {\r\n    return genreList.getGenre(index);\r\n  }\r\n\r\n  public Student getStudent(int index)\r\n  {\r\n    return this.studentList.getStudent(index);\r\n  }\r\n\r\n  public BoardGame getBoardGame(int index)\r\n  {\r\n    return this.catalogue.getBoardGame(index);\r\n  }\r\n\r\n  public Event getEvent(int index)\r\n  {\r\n    return eventList.getEvent(index);\r\n  }\r\n\r\n  public GameCandidate getVote(int index)\r\n  {\r\n    return votingList.getVote(index);\r\n  }\r\n\r\n  public BoardGame getBoardGameByTitle(String title)\r\n  {\r\n    return catalogue.getBoardGameByTitle(title);\r\n  }\r\n\r\n  public Student getStudentByID(int ID)\r\n  {\r\n    return this.studentList.getStudentById(ID);\r\n  }\r\n\r\n  public Event getEventByTitle(String title)\r\n  {\r\n    return eventList.getEventByTitle(title);\r\n  }\r\n\r\n  public void addStudent(Student student)\r\n  {\r\n    this.studentList.addStudent(student);\r\n  }\r\n\r\n  public void addBoardGame(BoardGame boardGame)\r\n  {\r\n    this.catalogue.addBoardGame(boardGame);\r\n  }\r\n\r\n  public void addEvent(Event event)\r\n  {\r\n    this.eventList.addEvent(event);\r\n  }\r\n\r\n  public void removeGenre(int index)\r\n  {\r\n    this.genreList.removeGenre(index);\r\n  }\r\n\r\n  public void addVote(String titleOfGame)\r\n  {\r\n    GameCandidate candidateGame = new GameCandidate(titleOfGame);\r\n  }\r\n\r\n  public void removeBoardGame(int index)\r\n  {\r\n    catalogue.removeBoardGame(getBoardGame(index));\r\n  }\r\n\r\n  public void setGenre(Genre genre, int index)\r\n  {\r\n    genreList.setGenre(genre, index);\r\n  }\r\n\r\n  public void removeStudent(Student student)\r\n  {\r\n    this.studentList.removeStudent(student);\r\n  }\r\n\r\n  public void removeEvent(int index)\r\n  {\r\n    eventList.removeEvent(index);\r\n  }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/model/Association.java b/src/model/Association.java
--- a/src/model/Association.java	(revision 1bf7d4c4ef452dcb851a7c7611416ad9b01bf1f2)
+++ b/src/model/Association.java	(date 1669885577882)
@@ -127,6 +127,7 @@
     this.eventList.addEvent(event);
   }
 
+
   public void removeGenre(int index)
   {
     this.genreList.removeGenre(index);
